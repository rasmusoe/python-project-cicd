[tox]
envlist = 
    {py36
    py38
    py39},
    {}

skip_missing_interpreters = true
isolated_build = True
skipsdist=True
usedevelop = True

[testenv]
description = run the test driver with {basepython}
deps = -r requirements/tests.txt
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
commands = 
    coverage erase
    coverage run -m pytest --junitxml {toxworkdir}/junit.{envname}.xml

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
    generates a diff coverage against origin/main (can be changed by setting DIFF_AGAINST env var)
passenv =
    DIFF_AGAINST
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
    
skip_install = true
deps = -r requirements/tests.txt
basepython = python3.8
extras =
parallel_show_output = true
commands =
    coverage combine
    coverage report -m
    coverage xml -o {toxworkdir}/coverage.xml
    coverage html -d {toxworkdir}/coverage_html

[testenv:style]
deps = -r requirements/style.txt
basepython = python3.8
commands =
    black --check src tests
    pydocstyle src tests --config=configurations/.pydocstyle
	pylint src tests --rcfile=configurations/.pylintrc
	flake8 src tests --config=configurations/.flake8

[testenv:black]
deps = -r requirements/style.txt
basepython = python3.8
commands = black src tests

[testenv:typing]
deps = -r requirements/typing.txt
basepython = python3.8
commands =
    mypy src

[testenv:docs]
deps = -r requirements/docs.txt
basepython = python3.8
commands =
	sphinx-apidoc -o docs/source src
	sphinx-build -b html docs/. docs/_build
